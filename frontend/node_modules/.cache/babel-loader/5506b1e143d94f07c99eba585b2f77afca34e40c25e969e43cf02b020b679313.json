{"ast":null,"code":"import { api } from \"../../helpers/api\";\n\n// redux/actions/authActions.js\nexport const signup = (name, email, password) => async dispatch => {\n  try {\n    const res = await fetch(\"http://localhost:5000/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: form.name,\n        email: form.email,\n        password: form.password\n      })\n    });\n    const data = await res.json();\n    if (data.success) {\n      alert(data.message); // ✅ show success\n    } else {\n      alert(data.message); // ❌ show failure\n    }\n    return data;\n  } catch (err) {\n    alert(\"❌ Signup failed\");\n    throw err;\n  }\n};\n\n// Login\nexport const login = (email, password) => async dispatch => {\n  const {\n    user\n  } = await api(\"/auth/login\", {\n    method: \"POST\",\n    body: {\n      email,\n      password\n    }\n  });\n  dispatch({\n    type: \"AUTH/SET_USER\",\n    payload: user\n  });\n};\n\n// Restore session\nexport const fetchMe = () => async dispatch => {\n  const {\n    user\n  } = await api(\"/auth/me\");\n  dispatch({\n    type: \"AUTH/SET_USER\",\n    payload: user\n  });\n};\n\n// Logout\nexport const logout = () => async dispatch => {\n  await api(\"/auth/logout\", {\n    method: \"POST\"\n  });\n  dispatch({\n    type: \"AUTH/SET_USER\",\n    payload: null\n  });\n};","map":{"version":3,"names":["api","signup","name","email","password","dispatch","res","fetch","method","headers","body","JSON","stringify","form","data","json","success","alert","message","err","login","user","type","payload","fetchMe","logout"],"sources":["C:/Users/PC 26/Desktop/Real-Estate-Website-main/frontend/src/redux/actions/authActions.js"],"sourcesContent":["import { api } from \"../../helpers/api\";\r\n\r\n// redux/actions/authActions.js\r\nexport const signup = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    const res = await fetch(\"http://localhost:5000/signup\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n  name: form.name,\r\n  email: form.email,\r\n  password: form.password,\r\n}),\r\n\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if (data.success) {\r\n      alert(data.message); // ✅ show success\r\n    } else {\r\n      alert(data.message); // ❌ show failure\r\n    }\r\n\r\n    return data;\r\n  } catch (err) {\r\n    alert(\"❌ Signup failed\");\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Login\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const { user } = await api(\"/auth/login\", { method: \"POST\", body: { email, password } });\r\n  dispatch({ type: \"AUTH/SET_USER\", payload: user });\r\n};\r\n\r\n// Restore session\r\nexport const fetchMe = () => async (dispatch) => {\r\n  const { user } = await api(\"/auth/me\");\r\n  dispatch({ type: \"AUTH/SET_USER\", payload: user });\r\n};\r\n\r\n// Logout\r\nexport const logout = () => async (dispatch) => {\r\n  await api(\"/auth/logout\", { method: \"POST\" });\r\n  dispatch({ type: \"AUTH/SET_USER\", payload: null });\r\n};\r\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,mBAAmB;;AAEvC;AACA,OAAO,MAAMC,MAAM,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EACnE,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MACtDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MACjDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACvBV,IAAI,EAAEW,IAAI,CAACX,IAAI;QACfC,KAAK,EAAEU,IAAI,CAACV,KAAK;QACjBC,QAAQ,EAAES,IAAI,CAACT;MACjB,CAAC;IAEG,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAE7B,IAAID,IAAI,CAACE,OAAO,EAAE;MAChBC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;IACvB,CAAC,MAAM;MACLD,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;IACvB;IAEA,OAAOJ,IAAI;EACb,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZF,KAAK,CAAC,iBAAiB,CAAC;IACxB,MAAME,GAAG;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAGA,CAACjB,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC5D,MAAM;IAAEgB;EAAK,CAAC,GAAG,MAAMrB,GAAG,CAAC,aAAa,EAAE;IAAEQ,MAAM,EAAE,MAAM;IAAEE,IAAI,EAAE;MAAEP,KAAK;MAAEC;IAAS;EAAE,CAAC,CAAC;EACxFC,QAAQ,CAAC;IAAEiB,IAAI,EAAE,eAAe;IAAEC,OAAO,EAAEF;EAAK,CAAC,CAAC;AACpD,CAAC;;AAED;AACA,OAAO,MAAMG,OAAO,GAAGA,CAAA,KAAM,MAAOnB,QAAQ,IAAK;EAC/C,MAAM;IAAEgB;EAAK,CAAC,GAAG,MAAMrB,GAAG,CAAC,UAAU,CAAC;EACtCK,QAAQ,CAAC;IAAEiB,IAAI,EAAE,eAAe;IAAEC,OAAO,EAAEF;EAAK,CAAC,CAAC;AACpD,CAAC;;AAED;AACA,OAAO,MAAMI,MAAM,GAAGA,CAAA,KAAM,MAAOpB,QAAQ,IAAK;EAC9C,MAAML,GAAG,CAAC,cAAc,EAAE;IAAEQ,MAAM,EAAE;EAAO,CAAC,CAAC;EAC7CH,QAAQ,CAAC;IAAEiB,IAAI,EAAE,eAAe;IAAEC,OAAO,EAAE;EAAK,CAAC,CAAC;AACpD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}